# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

--- Then I inserted the Spotify Data .csv into the table.
--- I queried all the data to get a feel for the data.

SELECT * FROM BIT_DB.Spotifydata;


--- First I determined who the top 10 artist are by popularity.

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity desc
LIMIT 10;


--- Then I explored the average dancebility by artist and track.

SELECT artist_name, track_name, avg(danceability)
FROM BIT_DB.Spotifydata
GROUP BY artist_name;


--- Then I wanted to see all the tracks whose popularity was greater than the average popular song.

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
WHERE popularity > (SELECT avg(popularity) FROM BIT_DB.Spotifydata)
GROUP BY popularity
ORDER BY popularity DESC;


